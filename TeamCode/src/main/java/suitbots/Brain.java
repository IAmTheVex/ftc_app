package suitbots;

/**
 * Created by Samantha on 10/31/2017.
 */

public class Brain {

        public static int predict(float[] atts) {

            int[] n_svs = {34, 49};
            double[][] svs = {{33.0, 55.0, 67.0, 110.0}, {19.0, 45.0, 54.0, 137.0}, {42.0, 105.0, 130.0, 309.0}, {37.0, 81.0, 100.0, 169.0}, {17.0, 40.0, 95.0, 203.0}, {58.0, 134.0, 166.0, 339.0}, {35.0, 46.0, 57.0, 83.0}, {18.0, 49.0, 59.0, 152.0}, {42.0, 86.0, 111.0, 231.0}, {52.0, 108.0, 164.0, 340.0}, {102.0, 248.0, 307.0, 646.0}, {97.0, 183.0, 223.0, 349.0}, {42.0, 92.0, 92.0, 192.0}, {51.0, 105.0, 129.0, 261.0}, {49.0, 110.0, 136.0, 278.0}, {71.0, 151.0, 187.0, 524.0}, {151.0, 301.0, 373.0, 763.0}, {100.0, 219.0, 212.0, 427.0}, {36.0, 65.0, 79.0, 141.0}, {37.0, 76.0, 91.0, 207.0}, {49.0, 96.0, 119.0, 251.0}, {46.0, 95.0, 113.0, 202.0}, {48.0, 51.0, 42.0, 140.0}, {22.0, 22.0, 16.0, 93.0}, {52.0, 45.0, 25.0, 106.0}, {15.0, 16.0, 8.0, 30.0}, {30.0, 61.0, 73.0, 182.0}, {55.0, 122.0, 150.0, 310.0}, {55.0, 94.0, 117.0, 216.0}, {15.0, 34.0, 52.0, 110.0}, {61.0, 60.0, 51.0, 173.0}, {63.0, 58.0, 50.0, 154.0}, {14.0, 14.0, 10.0, 36.0}, {16.0, 16.0, 12.0, 41.0}, {160.0, 48.0, 50.0, 232.0}, {216.0, 67.0, 72.0, 367.0}, {335.0, 96.0, 129.0, 590.0}, {657.0, 204.0, 217.0, 937.0}, {539.0, 115.0, 124.0, 393.0}, {196.0, 44.0, 47.0, 220.0}, {18.0, 14.0, 10.0, 40.0}, {105.0, 40.0, 42.0, 187.0}, {73.0, 28.0, 28.0, 124.0}, {48.0, 27.0, 20.0, 81.0}, {147.0, 42.0, 52.0, 251.0}, {212.0, 68.0, 67.0, 327.0}, {142.0, 39.0, 30.0, 146.0}, {185.0, 52.0, 57.0, 279.0}, {166.0, 44.0, 44.0, 176.0}, {98.0, 23.0, 23.0, 94.0}, {19.0, 15.0, 11.0, 43.0}, {154.0, 48.0, 44.0, 216.0}, {83.0, 28.0, 29.0, 153.0}, {148.0, 42.0, 44.0, 264.0}, {269.0, 77.0, 82.0, 415.0}, {302.0, 84.0, 90.0, 386.0}, {181.0, 56.0, 60.0, 317.0}, {262.0, 74.0, 81.0, 376.0}, {215.0, 60.0, 53.0, 249.0}, {157.0, 50.0, 54.0, 279.0}, {197.0, 57.0, 53.0, 245.0}, {120.0, 28.0, 30.0, 117.0}, {165.0, 45.0, 49.0, 226.0}, {140.0, 35.0, 37.0, 173.0}, {200.0, 58.0, 73.0, 335.0}, {265.0, 72.0, 76.0, 349.0}, {207.0, 61.0, 64.0, 289.0}, {99.0, 33.0, 34.0, 178.0}, {248.0, 73.0, 83.0, 376.0}, {251.0, 68.0, 72.0, 294.0}, {224.0, 55.0, 59.0, 225.0}, {181.0, 53.0, 60.0, 276.0}, {183.0, 48.0, 51.0, 201.0}, {52.0, 20.0, 19.0, 98.0}, {141.0, 45.0, 47.0, 220.0}, {90.0, 30.0, 31.0, 159.0}, {143.0, 42.0, 44.0, 235.0}, {219.0, 62.0, 59.0, 275.0}, {123.0, 38.0, 39.0, 209.0}, {223.0, 61.0, 81.0, 378.0}, {379.0, 134.0, 144.0, 790.0}, {461.0, 132.0, 143.0, 441.0}, {131.0, 37.0, 27.0, 129.0}};
            double[][] coeffs = {{-0.28730931119573522, -0.016687374115315817, -0.69252671234033769, -0.61856083211420654, -0.95829486275717435, -0.68678887312647596, -0.59203679689899702, -0.61189506905622459, -0.3182149213189005, -0.59860771006772862, -1.1038596979834732, -1.1033093743535465, -0.2710269528089857, -0.38107505423808485, -0.39158192195226077, -1.1045272646968638, -1.1043854805317013, -1.1037292122267983, -0.41939051105203912, -0.25314853001490822, -0.34889073158108252, -0.19538902622855589, -0.13902734026188893, -1.5046534808442129, -1.9922777807480725, -4.2879023464756587, -0.17171834384942866, -0.33637041606950846, -0.45376542477268195, -0.37306269417974053, -0.65228057743639434, -0.51876949812000073, -13.1300610165754, -76.438799562138271, 0.11861026999476648, 0.27872338316733519, 0.89564891507920574, 0.89573075091837218, 0.89549779706467214, 0.22305915120594716, 87.335356834754066, 0.40411275598471008, 0.86890690663287884, 0.77815817891887951, 0.012921217474445393, 0.33223590770991807, 0.42762540694961937, 0.013050833182509294, 0.5277176220782227, 0.47004549991570765, 5.6359023816690188, 0.059898885110728932, 0.49771343081883079, 0.41194977897108026, 0.74248583382549116, 0.7525351049560588, 0.53203546952818082, 0.055500475600875773, 0.08029975211332141, 0.34750972721675016, 0.22435086993070427, 0.32405696442989718, 0.057697085787484066, 0.15258477273371621, 0.27658911201346181, 0.67771323092931846, 0.12160066857274617, 0.2618856478927416, 0.16607809565948395, 0.73601425058303505, 0.63330220717169694, 0.2550488978589231, 0.36688293068699263, 1.5714368392451608, 0.095494302766705411, 0.047729656259696107, 0.24993149367012807, 0.40583069110830061, 0.40226499553879247, 0.49542268438860754, 0.89611308959336411, 0.89563735617681395, 0.25302658829128011}};
            double[] inters = {-0.10430735122892097};

            // exp(-y|x-x'|^2)
            double[] kernels = new double[83];
            double kernel;
            for (int i = 0; i < 83; i++) {
                kernel = 0.;
                for (int j = 0; j < 4; j++) {
                    kernel += Math.pow(svs[i][j] - atts[j], 2);
                }
                kernels[i] = -Math.exp(-0.001 * kernel);
            }

            int[] starts = new int[2];
            for (int i = 0; i < 2; i++) {
                if (i != 0) {
                    int start = 0;
                    for (int j = 0; j < i; j++) {
                        start += n_svs[j];
                    }
                    starts[i] = start;
                } else {
                    starts[0] = 0;
                }
            }

            int[] ends = new int[2];
            for (int i = 0; i < 2; i++) {
                ends[i] = n_svs[i] + starts[i];
            }

            double decision = 0.;
            for (int k = starts[1]; k < ends[1]; k++) {
                decision += kernels[k] * coeffs[0][k];
            }
            for (int k = starts[0]; k < ends[0]; k++) {
                decision += kernels[k] * coeffs[0][k];
            }
            decision += inters[0];

            if (decision > 0) {
                return 0;
            }
            return 1;
        }

        public static void main(String[] args) {
            if (args.length == 4) {
                float[] atts = new float[args.length];
                for (int i = 0, l = args.length; i < l; i++) {
                    atts[i] = Float.parseFloat(args[i]);
                }
                System.out.println(Brain.predict(atts));
            }
        }

}
